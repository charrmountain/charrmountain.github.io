{"ast":null,"code":"var _jsxFileName = \"/Users/Charlotte/portfolio/src/components/Pages/Contact/Form.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Form, Input, TextArea, Button, Message } from \"semantic-ui-react\";\nimport { IconContext } from \"react-icons\";\nimport { BiMailSend } from \"react-icons/bi\";\nimport { siteKey, secretKey } from \"../../../private/recaptcha\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nconst recaptchaRef = React.createRef();\n\nclass FormExampleCaptureValues extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      submissionMessage: \"Looking forward to chatting soon\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleSubmit = () => {\n      const {\n        name,\n        email,\n        message,\n        submissionMessage\n      } = this.state;\n      var submission = submissionMessage + \" \" + name + \"!\";\n      this.setState({\n        submissionMessage: submission\n      });\n      this.setState({\n        email: \"\",\n        name: \"\",\n        message: \"\",\n        submissionMessage: \"Looking forward to chatting soon\"\n      });\n      const recaptchaValue = recaptchaRef.current.getValue();\n      console.log(recaptchaValue);\n    };\n\n    this.onChange = value => {\n      console.log(\"Captcha value:\", value);\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      message,\n      submissionMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      autocomplete: \"on\",\n      onSubmit: this.handleSubmit,\n      className: \"formF\",\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      placeholder: \"Name\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.TextArea, {\n      placeholder: \"Message\",\n      name: \"message\",\n      value: message,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      theme: \"dark\",\n      ref: recaptchaRef,\n      sitekey: siteKey,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Submitted.\",\n      content: submissionMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      control: Button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mail-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"line-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"line line-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"line line-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"line line-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"line line-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"line line-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default FormExampleCaptureValues;","map":{"version":3,"sources":["/Users/Charlotte/portfolio/src/components/Pages/Contact/Form.js"],"names":["React","Component","Form","Input","TextArea","Button","Message","IconContext","BiMailSend","siteKey","secretKey","ReCAPTCHA","recaptchaRef","createRef","FormExampleCaptureValues","state","name","email","message","submissionMessage","handleChange","e","value","setState","handleSubmit","submission","recaptchaValue","current","getValue","console","log","onChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Form, Input, TextArea, Button, Message } from \"semantic-ui-react\";\nimport { IconContext } from \"react-icons\";\nimport { BiMailSend } from \"react-icons/bi\";\nimport { siteKey, secretKey } from \"../../../private/recaptcha\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nconst recaptchaRef = React.createRef();\n\nclass FormExampleCaptureValues extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    submissionMessage: \"Looking forward to chatting soon\",\n  };\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  handleSubmit = () => {\n    const { name, email, message, submissionMessage } = this.state;\n    var submission = submissionMessage + \" \" + name + \"!\";\n    this.setState({ submissionMessage: submission });\n    this.setState({\n      email: \"\",\n      name: \"\",\n      message: \"\",\n      submissionMessage: \"Looking forward to chatting soon\",\n    });\n    const recaptchaValue = recaptchaRef.current.getValue();\n    console.log(recaptchaValue);\n  };\n  onChange = (value) => {\n    console.log(\"Captcha value:\", value);\n  };\n\n  render() {\n    const { name, email, message, submissionMessage } = this.state;\n\n    return (\n      <Form\n        autocomplete=\"on\"\n        onSubmit={this.handleSubmit}\n        className=\"formF\"\n        inverted\n      >\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.TextArea\n          placeholder=\"Message\"\n          name=\"message\"\n          value={message}\n          onChange={this.handleChange}\n        />\n        <ReCAPTCHA\n          theme=\"dark\"\n          ref={recaptchaRef}\n          sitekey={siteKey}\n          onChange={this.onChange}\n        />\n        <Message success header=\"Submitted.\" content={submissionMessage} />\n        <Form.Field control={Button}>\n          <div id=\"mail-container\">\n            <div id=\"line-container\">\n              <div class=\"line line-1\"></div>\n              <div class=\"line line-4\"></div>\n              <div class=\"line line-2\"></div>\n              <div class=\"line line-5\"></div>\n              <div class=\"line line-3\"></div>\n            </div>\n            <div id=\"mail\"></div>\n          </div>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default FormExampleCaptureValues;\n"]},"metadata":{},"sourceType":"module"}