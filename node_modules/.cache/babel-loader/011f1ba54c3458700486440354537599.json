{"ast":null,"code":"/** @preserve\n  * package: sweetalert2-react-content v5.0.3\n  * file: dist/sweetalert2-react-content.umd.js\n  * homepage: https://github.com/sweetalert2/sweetalert2-react-content#readme\n  * license: MIT\n  **/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom/client')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom/client'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, client) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n  const mounts = [{\n    key: 'title',\n    getter: swal => swal.getTitle()\n  }, {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer()\n  }, {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton()\n  }, {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton()\n  }, {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton()\n  }, {\n    key: 'footer',\n    getter: swal => swal.getFooter()\n  }, {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton()\n  }, {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content')\n  }, {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader()\n  }];\n\n  const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n\n  function withReactContent(ParentSwal) {\n    /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n    and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n    function extractReactParams(params) {\n      const reactParams = {};\n      const otherParams = {};\n      const mountKeys = mounts.map(mount => mount.key);\n      Object.entries(params).forEach(_ref => {\n        let [key, value] = _ref;\n\n        if (mountKeys.includes(key) && /*#__PURE__*/React__default[\"default\"].isValidElement(value)) {\n          reactParams[key] = value;\n          otherParams[key] = ' ';\n        } else {\n          otherParams[key] = value;\n        }\n      });\n      return [reactParams, otherParams];\n    }\n\n    function render(swal, reactParams) {\n      Object.entries(reactParams).forEach(_ref2 => {\n        let [key, value] = _ref2;\n        const mount = mounts.find(mount => mount.key === key);\n        const domElement = mount.getter(ParentSwal);\n        const root = client.createRoot(domElement);\n        root.render(value);\n\n        swal.__roots.push(root);\n      });\n    }\n\n    function unrender(swal) {\n      swal.__roots.forEach(root => {\n        root.unmount();\n      });\n\n      swal.__roots = [];\n    }\n\n    return class extends ParentSwal {\n      static argsToParams(args) {\n        if ( /*#__PURE__*/React__default[\"default\"].isValidElement(args[0]) || /*#__PURE__*/React__default[\"default\"].isValidElement(args[1])) {\n          const params = {};\n          ['title', 'html', 'icon'].forEach((name, index) => {\n            if (args[index] !== undefined) {\n              params[name] = args[index];\n            }\n          });\n          return params;\n        } else {\n          return ParentSwal.argsToParams(args);\n        }\n      }\n\n      _main(params, mixinParams) {\n        this.__roots = [];\n        this.__params = Object.assign({}, mixinParams, params);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        const superWillOpen = otherParams.willOpen || noop;\n        const superDidOpen = otherParams.didOpen || noop;\n        const superDidDestroy = otherParams.didDestroy || noop;\n        return super._main(Object.assign({}, otherParams, {\n          willOpen: popup => {\n            render(this, reactParams);\n            superWillOpen(popup);\n          },\n          didOpen: popup => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup);\n            });\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup);\n            unrender(this);\n          }\n        }));\n      }\n\n      update(params) {\n        Object.assign(this.__params, params);\n        unrender(this);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        super.update(otherParams);\n        render(this, reactParams);\n      }\n\n    };\n  }\n\n  return withReactContent;\n});","map":{"version":3,"sources":["../src/mounts.js","../src/index.js"],"names":["mounts","key","getter","swal","noop","reactParams","otherParams","mountKeys","mount","Object","React","domElement","root","createRoot","argsToParams","args","params","ParentSwal","_main","extractReactParams","superWillOpen","superDidOpen","superDidDestroy","willOpen","popup","render","didOpen","setTimeout","didDestroy","unrender","update"],"mappings":"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","sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: (swal) => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: (swal) => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: (swal) => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: (swal) => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: (swal) => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: (swal) => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: (swal) => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: (swal) => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: (swal) => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent(ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams(params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map((mount) => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n\n  function render(swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find((mount) => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      const root = createRoot(domElement)\n      root.render(value)\n      swal.__roots.push(root)\n    })\n  }\n\n  function unrender(swal) {\n    swal.__roots.forEach((root) => {\n      root.unmount()\n    })\n    swal.__roots = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main(params, mixinParams) {\n      this.__roots = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superWillOpen = otherParams.willOpen || noop\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          willOpen: (popup) => {\n            render(this, reactParams)\n            superWillOpen(popup)\n          },\n          didOpen: (popup) => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup)\n            })\n          },\n          didDestroy: (popup) => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        })\n      )\n    }\n\n    update(params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}